/**
 * generated by Xtext 2.20.0
 */
package uk.juliusz.generateme.generateMe.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import uk.juliusz.generateme.generateMe.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class GenerateMeFactoryImpl extends EFactoryImpl implements GenerateMeFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static GenerateMeFactory init()
  {
    try
    {
      GenerateMeFactory theGenerateMeFactory = (GenerateMeFactory)EPackage.Registry.INSTANCE.getEFactory(GenerateMePackage.eNS_URI);
      if (theGenerateMeFactory != null)
      {
        return theGenerateMeFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new GenerateMeFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GenerateMeFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case GenerateMePackage.GENERATE_ME_PROGRAM: return createGenerateMeProgram();
      case GenerateMePackage.CONFIG: return createConfig();
      case GenerateMePackage.HOME_PAGE: return createHomePage();
      case GenerateMePackage.PAGES: return createPages();
      case GenerateMePackage.CONTENT_PAGE: return createContentPage();
      case GenerateMePackage.SECTION: return createSection();
      case GenerateMePackage.CONTACT_PAGE: return createContactPage();
      case GenerateMePackage.GALLERY_PAGE: return createGalleryPage();
      case GenerateMePackage.PHOTO: return createPhoto();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GenerateMeProgram createGenerateMeProgram()
  {
    GenerateMeProgramImpl generateMeProgram = new GenerateMeProgramImpl();
    return generateMeProgram;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Config createConfig()
  {
    ConfigImpl config = new ConfigImpl();
    return config;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public HomePage createHomePage()
  {
    HomePageImpl homePage = new HomePageImpl();
    return homePage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Pages createPages()
  {
    PagesImpl pages = new PagesImpl();
    return pages;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContentPage createContentPage()
  {
    ContentPageImpl contentPage = new ContentPageImpl();
    return contentPage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Section createSection()
  {
    SectionImpl section = new SectionImpl();
    return section;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContactPage createContactPage()
  {
    ContactPageImpl contactPage = new ContactPageImpl();
    return contactPage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GalleryPage createGalleryPage()
  {
    GalleryPageImpl galleryPage = new GalleryPageImpl();
    return galleryPage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Photo createPhoto()
  {
    PhotoImpl photo = new PhotoImpl();
    return photo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GenerateMePackage getGenerateMePackage()
  {
    return (GenerateMePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static GenerateMePackage getPackage()
  {
    return GenerateMePackage.eINSTANCE;
  }

} //GenerateMeFactoryImpl
