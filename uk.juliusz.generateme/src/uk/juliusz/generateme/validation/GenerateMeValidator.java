/*
 * generated by Xtext 2.20.0
 */
package uk.juliusz.generateme.validation;

import org.eclipse.xtext.validation.Check;

import uk.juliusz.generateme.generateMe.ContactPage;
import uk.juliusz.generateme.generateMe.GenerateMePackage;
import uk.juliusz.generateme.generateMe.Pages;
import uk.juliusz.generateme.generateMe.Photo;
import uk.juliusz.generateme.generateMe.Section;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class GenerateMeValidator extends AbstractGenerateMeValidator {
	public static final String INVALID_PAGE_NAME = "uk.julusz.generateme.INVALID_PAGE_NAME";
	public static final String INVALID_SECTION_NAME = "uk.julusz.generateme.INVALID_SECTION_NAME";
	public static final String INVALID_PHOTO_NAME = "uk.julusz.generateme.INVALID_PHOTO_NAME";
	public static final String INVALID_FILENAME = "uk.julusz.generateme.INVALID_FILENAME";
	public static final String INVALID_FROM_ADDRESS = "uk.julusz.generateme.INVALID_FROM_ADDRESS";
	public static final String INVALID_TO_ADDRESS = "uk.julusz.generateme.INVALID_TO_ADDRESS";
	
	@Check
	public void checkPageNamesStartWithCapital(Pages page) {
		if(Character.isLowerCase(page.getName().charAt(0))) {
			warning("Page name declaration should start with a capital",
					page, GenerateMePackage.Literals.PAGES__NAME,
					INVALID_PAGE_NAME);
		}
		
	}
	
	
	@Check
	public void checkSectionNamesStartWithCapital(Section section) {
		if(Character.isLowerCase(section.getName().charAt(0))) {
			warning("Section name declaration should start with a capital",
					section, GenerateMePackage.Literals.SECTION__NAME,
					INVALID_SECTION_NAME);
		}
		
	}
	
	@Check
	public void checkPhotonNamesStartWithCapital(Photo photo) {
		if(Character.isLowerCase(photo.getName().charAt(0))) {
			warning("Photo name declaration should start with a capital",
					photo, GenerateMePackage.Literals.PHOTO__NAME,
					INVALID_PHOTO_NAME);
		}
		
	}
	
	@Check
	public void checkFileNameContainsExtension(Photo photo) {
		if(!photo.getFileName().contains(".")) {
			warning("File name should include extension",
					photo, GenerateMePackage.Literals.PHOTO__FILE_NAME,
					INVALID_FILENAME);
		}
		
	}
	

	
	@Check
	public void SendFromAddressIsCorrect(ContactPage page) {
		if(!page.getFrom().contains("@")) {
			warning("Send from address should contain a valid e-mail address",
					page, GenerateMePackage.Literals.CONTACT_PAGE__FROM,
					INVALID_FROM_ADDRESS);
		}
		
	}
	
	@Check
	public void SendToAddressIsCorrect(ContactPage page) {
		if(!page.getTo().contains("@")) {
			warning("Send to address should contain a valid e-mail address",
					page, GenerateMePackage.Literals.CONTACT_PAGE__TO,
					INVALID_TO_ADDRESS);
		}
		
	}
	
	
	
	
	
	
	
	
	
//	public static final INVALID_NAME = 'invalidName'
//
//	@Check
//	public void checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.getName().charAt(0))) {
//			warning("Name should start with a capital",
//					GenerateMePackage.Literals.GREETING__NAME,
//					INVALID_NAME);
//		}
//	}
	
}
