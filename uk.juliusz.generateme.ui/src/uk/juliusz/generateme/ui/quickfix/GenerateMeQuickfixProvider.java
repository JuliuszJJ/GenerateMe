/*
 * generated by Xtext 2.20.0
 */
package uk.juliusz.generateme.ui.quickfix;

import javax.swing.text.BadLocationException;

import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.model.edit.IModification;
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext;
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.validation.Issue;

import uk.juliusz.generateme.validation.GenerateMeValidator;

/**
 * Custom quickfixes.
 *
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
public class GenerateMeQuickfixProvider extends DefaultQuickfixProvider {

	
	
	@Fix(GenerateMeValidator.INVALID_PAGE_NAME)
	public void capitalizeNamePage(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Uppercase the page name", "Capitalize the first letter", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String firstLetter = xtextDocument.get(issue.getOffset(), 1);
				xtextDocument.replace(issue.getOffset(), 1, firstLetter.toUpperCase());
		}
		});
	}
	
	
	@Fix(GenerateMeValidator.INVALID_SECTION_NAME)
	public void capitalizeNameSection(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Uppercase the name", "Capitalize the first letter", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String firstLetter = xtextDocument.get(issue.getOffset(), 1);
				xtextDocument.replace(issue.getOffset(), 1, firstLetter.toUpperCase());
		}
		});
	}
	
	@Fix(GenerateMeValidator.INVALID_PHOTO_NAME)
	public void capitalizeNamePhoto(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Uppercase the name", "Capitalize the first letter", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String firstLetter = xtextDocument.get(issue.getOffset(), 1);
				xtextDocument.replace(issue.getOffset(), 1, firstLetter.toUpperCase());
		}
		});
	}
	
	
	@Fix(GenerateMeValidator.INVALID_FILENAME)
	public void addExtensionJpg(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Add JPG extension", "Add *.jpg extension", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String thisText = xtextDocument.get(issue.getOffset(), issue.getLength()-1);
				xtextDocument.replace(issue.getOffset(), issue.getLength()-1, thisText+".jpg");
		}
		});
	}
	
	
	@Fix(GenerateMeValidator.INVALID_FILENAME)
	public void addExtensionPng(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Add PNG extension", "Add *.png extension", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String thisText = xtextDocument.get(issue.getOffset(), issue.getLength()-1);
				xtextDocument.replace(issue.getOffset(), issue.getLength()-1, thisText+".png");
		}
		});
	}
	
	
	@Fix(GenerateMeValidator.INVALID_FILENAME)
	public void addExtensionGif(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Add GIF extension", "Add *.gif extension", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String thisText = xtextDocument.get(issue.getOffset(), issue.getLength()-1);
				xtextDocument.replace(issue.getOffset(), issue.getLength()-1, thisText+".gif");
		}
		});
	}
	
	
	@Fix(GenerateMeValidator.INVALID_FROM_ADDRESS)
	public void addFromEmailGmail(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Add Gmail domain", "Add *@gmail.com", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String thisText = xtextDocument.get(issue.getOffset(), issue.getLength()-1);
				xtextDocument.replace(issue.getOffset(), issue.getLength()-1, thisText+"@gmail.com");
		}
		});
	}
	
	
	@Fix(GenerateMeValidator.INVALID_FROM_ADDRESS)
	public void addFromEmailOutlook(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Add Outlook domain", "Add *@outlook.com", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String thisText = xtextDocument.get(issue.getOffset(), issue.getLength()-1);
				xtextDocument.replace(issue.getOffset(), issue.getLength()-1, thisText+"@outlook.com");
		}
		});
	}
	
	
	@Fix(GenerateMeValidator.INVALID_FROM_ADDRESS)
	public void addFromEmailHotmail(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Add Hotmail domain", "Add *@hotmail.com", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String thisText = xtextDocument.get(issue.getOffset(), issue.getLength()-1);
				xtextDocument.replace(issue.getOffset(), issue.getLength()-1, thisText+"@hotmail.com");
		}
		});
	}
	
	
	@Fix(GenerateMeValidator.INVALID_FROM_ADDRESS)
	public void addFromEmailGeneric(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Add example address", "Add user@domain.com", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				xtextDocument.replace(issue.getOffset()+1, issue.getLength()-2, "user@domain.com");
		}
		});
	}
	
	
	
	
	
	@Fix(GenerateMeValidator.INVALID_TO_ADDRESS)
	public void addToEmailGmail(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Add Gmail domain", "Add *@gmail.com", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String thisText = xtextDocument.get(issue.getOffset(), issue.getLength()-1);
				xtextDocument.replace(issue.getOffset(), issue.getLength()-1, thisText+"@gmail.com");
		}
		});
	}
	
	
	@Fix(GenerateMeValidator.INVALID_TO_ADDRESS)
	public void addToEmailOutlook(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Add Outlook domain", "Add *@outlook.com", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String thisText = xtextDocument.get(issue.getOffset(), issue.getLength()-1);
				xtextDocument.replace(issue.getOffset(), issue.getLength()-1, thisText+"@outlook.com");
		}
		});
	}
	
	
	@Fix(GenerateMeValidator.INVALID_TO_ADDRESS)
	public void addToEmailHotmail(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Add Hotmail domain", "Add *@hotmail.com", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				String thisText = xtextDocument.get(issue.getOffset(), issue.getLength()-1);
				xtextDocument.replace(issue.getOffset(), issue.getLength()-1, thisText+"@hotmail.com");
		}
		});
	}
	
	
	@Fix(GenerateMeValidator.INVALID_TO_ADDRESS)
	public void addToEmailGeneric(final Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Add example address", "Add user@domain.com", null, new IModification() {
			public void apply(IModificationContext context) throws BadLocationException, org.eclipse.jface.text.BadLocationException {
				IXtextDocument xtextDocument = context.getXtextDocument();
				xtextDocument.replace(issue.getOffset()+1, issue.getLength()-2, "user@domain.com");
		}
		});
	}
	
	
	
	
	
	
	
//	@Fix(GenerateMeValidator.INVALID_NAME)
//	public void capitalizeName(final Issue issue, IssueResolutionAcceptor acceptor) {
//		acceptor.accept(issue, "Capitalize name", "Capitalize the name.", "upcase.png", new IModification() {
//			public void apply(IModificationContext context) throws BadLocationException {
//				IXtextDocument xtextDocument = context.getXtextDocument();
//				String firstLetter = xtextDocument.get(issue.getOffset(), 1);
//				xtextDocument.replace(issue.getOffset(), 1, firstLetter.toUpperCase());
//			}
//		});
//	}

}
